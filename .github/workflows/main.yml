name: Fisheye Video Conference System

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    outputs:
      tag_name: ${{ steps.generate_tag.outputs.tag_name }}

    steps:
      - name: Checkout repository (full history + tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # Step to checkout another private repository
      - name: Checkout Private Repository
        run: |
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/perseverance-tech-tw/video-conference-using-fisheye.git video-conference-using-fisheye

      - name: Set up Python 3.9.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'

      - name: Generate Tag Name from latest Git tag
        id: generate_tag
        shell: bash
        run: |
          set -euo pipefail
          git fetch --tags --prune
          latest_tag=$(git tag --sort=-v:refname | grep '^v1\.1\.' | head -n 1 || true)
          if [ -z "$latest_tag" ]; then
            next_tag="v1.1.0"
          else
            patch=${latest_tag##v1.1.}
            next_patch=$((patch + 1))
            next_tag="v1.1.$next_patch"
          fi
          echo "TAG_NAME=$next_tag" >> "$GITHUB_ENV"
          echo "tag_name=$next_tag" >> "$GITHUB_OUTPUT"
      - name: Update version.txt
        shell: bash
        run: echo "${{ env.TAG_NAME }}" > version.txt

      - name: Replace version placeholder in ISS file
        shell: bash
        run: sed -i "s/__VERSION__/${{ env.TAG_NAME }}/g" dist/setup_script.iss

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
      - name: Build with PyInstaller
        shell: bash
        run: pyinstaller --clean video-conference-using-fisheye.spec

      - name: Install Inno Setup
        shell: powershell
        run: choco install innosetup -y

      - name: Build Installer
        shell: cmd
        run: iscc dist\setup_script.iss

      - name: Get previous tag (robust)
        id: previoustag
        shell: bash
        run: |
          set -euo pipefail
          if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
            prev=$(git describe --tags --abbrev=0 HEAD^)
          else
            prev=""
          fi
          echo "tag=$prev" >> "$GITHUB_OUTPUT"
      - name: Generate changelog (robust)
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          echo "log<<EOF" >> "$GITHUB_OUTPUT"
          if [ -n "${{ steps.previoustag.outputs.tag }}" ]; then
            git log ${{ steps.previoustag.outputs.tag }}..HEAD --pretty=format:"- %s (%h)"
          else
            git log --pretty=format:"- %s (%h)"
          fi >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Upload Windows Artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/Output/*Fisheye*${{ env.TAG_NAME }}*.exe
          tag_name: ${{ env.TAG_NAME }}
          body: |
            Fisheye Video Conference System ${{ env.TAG_NAME }}
            ${{ steps.changelog.outputs.log }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    needs: build-windows

    steps:
      - name: Checkout repository (full history + tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # Step to checkout another private repository
      - name: Checkout Private Repository
        run: |
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/perseverance-tech-tw/video-conference-using-fisheye.git video-conference-using-fisheye

      - name: Set TAG_NAME from Windows job
        shell: bash
        run: echo "TAG_NAME=${{ needs.build-windows.outputs.tag_name }}" >> "$GITHUB_ENV"

      - name: Set up Python 3.9.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'

      - name: Update version.txt
        shell: bash
        run: echo "${{ env.TAG_NAME }}" > version.txt

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
      - name: Create dist/linux folder
        shell: bash
        run: mkdir -p dist/linux

      - name: Build with PyInstaller (Linux)
        shell: bash
        run: pyinstaller --clean --distpath dist/linux video-conference-using-fisheye.spec

      - name: Copy install.sh and uninstall.sh into dist/linux folder
        shell: bash
        run: |
          appdir="dist/linux/FisheyeVideoConferenceSystem"
          if [ ! -d "$appdir" ]; then
            appdir=$(find dist/linux -maxdepth 1 -type d -not -path 'dist/linux' | head -n1)
          fi
          cp dist/install.sh "$appdir"/
          cp dist/uninstall.sh "$appdir"/
          chmod +x "$appdir"/install.sh "$appdir"/uninstall.sh
      - name: Install p7zip
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y p7zip-full

      - name: Compress to .7z using LZMA
        shell: bash
        run: |
          cd dist/linux
          appdir=$(find . -maxdepth 1 -type d -not -path '.' | head -n1)
          7z a -t7z -m0=lzma -mx=9 -ms=on ../FisheyeVideoConferenceSystem-${{ env.TAG_NAME }}-linux.7z "$appdir"
      - name: Get previous tag (robust)
        id: previoustag
        shell: bash
        run: |
          set -euo pipefail
          if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
            prev=$(git describe --tags --abbrev=0 HEAD^)
          else
            prev=""
          fi
          echo "tag=$prev" >> "$GITHUB_OUTPUT"
      - name: Generate changelog (robust)
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          echo "log<<EOF" >> "$GITHUB_OUTPUT"
          if [ -n "${{ steps.previoustag.outputs.tag }}" ]; then
            git log ${{ steps.previoustag.outputs.tag }}..HEAD --pretty=format:"- %s (%h)"
          else
            git log --pretty=format:"- %s (%h)"
          fi >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Upload Linux Artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/FisheyeVideoConferenceSystem-${{ env.TAG_NAME }}-linux.7z
          tag_name: ${{ env.TAG_NAME }}
          body: |
            Fisheye Video Conference System ${{ env.TAG_NAME }}
            ${{ steps.changelog.outputs.log }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
